{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\AdminDashboard\\\\AdminDashboard\\\\frontend\\\\src\\\\ManageUsers.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport CreateUserForm from './CreateUserForm';\nimport UserList from './UserList';\nimport EditUserForm from './EditUserForm';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ManageUsers({\n  users,\n  fetchUsers\n}) {\n  _s();\n  const [editingUser, setEditingUser] = useState(null);\n  const [view, setView] = useState('list');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-users\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEditingUser(null);\n          setView('create');\n        },\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEditingUser(null);\n          setView('list');\n        },\n        children: \"User List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), view === 'create' && /*#__PURE__*/_jsxDEV(CreateUserForm, {\n      onUserCreated: () => {\n        fetchUsers(); // Refresh user list after creating a new user\n        setView('list');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), view === 'edit' && editingUser && /*#__PURE__*/_jsxDEV(EditUserForm, {\n      user: editingUser,\n      onUserUpdated: () => {\n        fetchUsers(); // Refresh user list after editing a user\n        setEditingUser(null);\n        setView('list');\n      },\n      onCancel: () => {\n        setEditingUser(null);\n        setView('list');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), view === 'list' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email Verified\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [user.firstName, \" \", user.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.emailVerified ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setEditingUser(user);\n                  setView('edit');\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: async () => {\n                  await fetch(`http://localhost:3001/users/${user.userId}`, {\n                    method: 'DELETE'\n                  });\n                  fetchUsers(); // ‚ùå not defined here\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, user.userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageUsers, \"Q3oPt4p1o4+ErH1TOnsgrPRyMYY=\");\n_c = ManageUsers;\nvar _c;\n$RefreshReg$(_c, \"ManageUsers\");","map":{"version":3,"names":["useState","CreateUserForm","UserList","EditUserForm","jsxDEV","_jsxDEV","ManageUsers","users","fetchUsers","_s","editingUser","setEditingUser","view","setView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onUserCreated","user","onUserUpdated","onCancel","map","firstName","lastName","email","category","emailVerified","fetch","userId","method","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Downloads/AdminDashboard/AdminDashboard/frontend/src/ManageUsers.js"],"sourcesContent":["import { useState } from 'react';\r\nimport CreateUserForm from './CreateUserForm';\r\nimport UserList from './UserList';\r\nimport EditUserForm from './EditUserForm';\r\nimport './style.css';\r\n\r\nexport default function ManageUsers({ users, fetchUsers }) {\r\n  const [editingUser, setEditingUser] = useState(null);\r\n  const [view, setView] = useState('list');\r\n\r\n  return (\r\n    <div className=\"manage-users\">\r\n      <h2>Manage Users</h2>\r\n      \r\n      <div className=\"view-buttons\">\r\n        <button onClick={() => {\r\n          setEditingUser(null);\r\n          setView('create');\r\n        }}>\r\n          Create User\r\n        </button>\r\n        <button onClick={() => {\r\n          setEditingUser(null);\r\n          setView('list');\r\n        }}>\r\n          User List\r\n        </button>\r\n      </div>\r\n\r\n      {view === 'create' && (\r\n        <CreateUserForm\r\n          onUserCreated={() => {\r\n            fetchUsers();  // Refresh user list after creating a new user\r\n            setView('list');\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {view === 'edit' && editingUser && (\r\n        <EditUserForm\r\n          user={editingUser}\r\n          onUserUpdated={() => {\r\n            fetchUsers();  // Refresh user list after editing a user\r\n            setEditingUser(null);\r\n            setView('list');\r\n          }}\r\n          onCancel={() => {\r\n            setEditingUser(null);\r\n            setView('list');\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {view === 'list' && (\r\n        <div className=\"user-table\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Category</th>\r\n                <th>Email Verified</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user.userId}>\r\n                  <td>{user.firstName} {user.lastName}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.category}</td>\r\n                  <td>{user.emailVerified ? 'Yes' : 'No'}</td>\r\n                  <td>\r\n                    <button onClick={() => {\r\n                      setEditingUser(user);\r\n                      setView('edit');\r\n                    }}>Edit</button>\r\n                    <button onClick={async () => {\r\n                   await fetch(`http://localhost:3001/users/${user.userId}`, {\r\n                   method: 'DELETE',\r\n                   });\r\n                   fetchUsers();  // ‚ùå not defined here\r\n                   }}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,WAAWA,CAAC;EAAEC,KAAK;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EAExC,oBACEK,OAAA;IAAKS,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BV,OAAA;MAAAU,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBd,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BV,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAM;UACrBT,cAAc,CAAC,IAAI,CAAC;UACpBE,OAAO,CAAC,QAAQ,CAAC;QACnB,CAAE;QAAAE,QAAA,EAAC;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTd,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAM;UACrBT,cAAc,CAAC,IAAI,CAAC;UACpBE,OAAO,CAAC,MAAM,CAAC;QACjB,CAAE;QAAAE,QAAA,EAAC;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELP,IAAI,KAAK,QAAQ,iBAChBP,OAAA,CAACJ,cAAc;MACboB,aAAa,EAAEA,CAAA,KAAM;QACnBb,UAAU,CAAC,CAAC,CAAC,CAAE;QACfK,OAAO,CAAC,MAAM,CAAC;MACjB;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,EAEAP,IAAI,KAAK,MAAM,IAAIF,WAAW,iBAC7BL,OAAA,CAACF,YAAY;MACXmB,IAAI,EAAEZ,WAAY;MAClBa,aAAa,EAAEA,CAAA,KAAM;QACnBf,UAAU,CAAC,CAAC,CAAC,CAAE;QACfG,cAAc,CAAC,IAAI,CAAC;QACpBE,OAAO,CAAC,MAAM,CAAC;MACjB,CAAE;MACFW,QAAQ,EAAEA,CAAA,KAAM;QACdb,cAAc,CAAC,IAAI,CAAC;QACpBE,OAAO,CAAC,MAAM,CAAC;MACjB;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,EAEAP,IAAI,KAAK,MAAM,iBACdP,OAAA;MAAKS,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBV,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,eACEV,OAAA;YAAAU,QAAA,gBACEV,OAAA;cAAAU,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbd,OAAA;cAAAU,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACdd,OAAA;cAAAU,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBd,OAAA;cAAAU,QAAA,EAAI;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvBd,OAAA;cAAAU,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRd,OAAA;UAAAU,QAAA,EACGR,KAAK,CAACkB,GAAG,CAAEH,IAAI,iBACdjB,OAAA;YAAAU,QAAA,gBACEV,OAAA;cAAAU,QAAA,GAAKO,IAAI,CAACI,SAAS,EAAC,GAAC,EAACJ,IAAI,CAACK,QAAQ;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzCd,OAAA;cAAAU,QAAA,EAAKO,IAAI,CAACM;YAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBd,OAAA;cAAAU,QAAA,EAAKO,IAAI,CAACO;YAAQ;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBd,OAAA;cAAAU,QAAA,EAAKO,IAAI,CAACQ,aAAa,GAAG,KAAK,GAAG;YAAI;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5Cd,OAAA;cAAAU,QAAA,gBACEV,OAAA;gBAAQe,OAAO,EAAEA,CAAA,KAAM;kBACrBT,cAAc,CAACW,IAAI,CAAC;kBACpBT,OAAO,CAAC,MAAM,CAAC;gBACjB,CAAE;gBAAAE,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAChBd,OAAA;gBAAQe,OAAO,EAAE,MAAAA,CAAA,KAAY;kBAC9B,MAAMW,KAAK,CAAC,+BAA+BT,IAAI,CAACU,MAAM,EAAE,EAAE;oBAC1DC,MAAM,EAAE;kBACR,CAAC,CAAC;kBACFzB,UAAU,CAAC,CAAC,CAAC,CAAE;gBACf,CAAE;gBAAAO,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC;UAAA,GAhBEG,IAAI,CAACU,MAAM;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBhB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACV,EAAA,CAtFuBH,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}